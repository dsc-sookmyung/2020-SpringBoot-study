plugins {
	id 'org.springframework.boot' version '2.3.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.cloud:spring-cloud-gcp-starter-sql-mysql'
	implementation 'org.springframework.cloud:spring-cloud-gcp-samples'
	implementation 'org.apache.commons:commons-io'
	implementation 'org.apache.maven.plugins:maven-deploy-plugin'
	implementation 'org.springframework.cloud:spring-cloud-gcp-dependencies'
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter-sql-mysql'
	//implementation 'org.springframework.boot:spring-boot-starter'
	//runtimeOnly 'mysql:mysql-connector-java'
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter-pubsub'
	//compile group: 'org.springframework.cloud', name: 'spring-cloud-gcp-starter-sql-mysql'
	//compile 'com.google.cloud.sql:mysql-socket-factory-connector-j-8:1.1.0'
/*
	//implementation 'org.springframework.cloud:spring-cloud-gcp-starter-storage'
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
	//testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.3.1.RELEASE'
// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.12'
// https://mvnrepository.com/artifact/org.awaitility/awaitility
	testCompile group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
// https://mvnrepository.com/artifact/org.apache.commons/commons-io
	compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
// https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin
	compile group: 'org.apache.maven.plugins', name: 'maven-deploy-plugin', version: '2.8.2'
// https://mvnrepository.com/artifact/com.google.cloud/spring-cloud-gcp-starter
	compile group: 'com.google.cloud', name: 'spring-cloud-gcp-starter', version: '2.0.0-RC2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit'
	testImplementation 'org.awaitility:awaitility'
*/
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

def webappDir = "/Users/yrji/dev/springStudy/dsc-webproject-ReactSpringBoot/dsc-webproject-frontend/dsc-webproject-frontend"

sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildReact"
}

task buildReact(type: Exec) {
	dependsOn "installReact"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "run-script", "build"
	} else {
		commandLine "npm", "run-script", "build"
	}
}

task installReact(type: Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
		commandLine "npm.cmd", "audit", "fix"
		commandLine 'npm.cmd', 'install'
	} else {
		commandLine "npm", "audit", "fix"
		commandLine 'npm', 'install'
	}
}

test {
	useJUnitPlatform()
}
